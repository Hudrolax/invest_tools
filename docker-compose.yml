services:
  backend:
    build:
      context: .
      args:
        - DEV=${DEV}
    init: true
    logging:
      driver: "json-file"
      options:
        max-size: "3m"
        max-file: "3"
    # restart: always
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DEV=${DEV}
      - SECRET=${SECRET}
      - TELEGRAM_BOT_SECRET=${TELEGRAM_BOT_SECRET}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BYBIT_API_KEY=${BYBIT_API_KEY}
      - BYBIT_API_SECRET=${BYBIT_API_SECRET}
      - ALERT_BOT_ENDPOINT=${ALERT_BOT_ENDPOINT}
      - ALERT_BOT_TOKEN=${ALERT_BOT_TOKEN}

    volumes:
      - ./app:/app
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    logging:
      driver: "json-file"
      options:
        max-size: "3m"
        max-file: "3"
    # restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  adminer:
    image: adminer
    # restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "3m"
        max-file: "3"
    depends_on:
      - db

  proxy:
    build:
      context: ./proxy
    logging:
      driver: "json-file"
      options:
        max-size: "3m"
        max-file: "3"
    # restart: always
    depends_on:
      - backend
    ports:
      - 8000:8000

volumes:
  db-data:
